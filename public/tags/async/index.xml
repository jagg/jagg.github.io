<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Async on Logos, Thumos &amp; Code</title>
    <link>http://localhost:1313/tags/async/</link>
    <description>Recent content in Async on Logos, Thumos &amp; Code</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2025 - Jose A. Garcia</copyright>
    <lastBuildDate>Sat, 05 Apr 2025 10:01:15 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/async/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Eio</title>
      <link>http://localhost:1313/posts/eio/</link>
      <pubDate>Sat, 05 Apr 2025 10:01:15 +0200</pubDate>
      <guid>http://localhost:1313/posts/eio/</guid>
      <description>&lt;p&gt;This weekend I took a step back from working on my Key-Value store to&#xA;make sure I understand the concurrency model of Eio, the OCaml 5&#xA;library that I&amp;rsquo;m using for concurrency and parallelism.&lt;/p&gt;&#xA;&lt;p&gt;I decided to turn my notes into a post to force myself to address any&#xA;gaps in my understanding. I&amp;rsquo;m sure that there are several errors, or&#xA;things to improve, so if you are reading this and find some, please,&#xA;ping me on &lt;a href=&#34;https://x.com/jagarciagim&#34;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Giving OCaml a try</title>
      <link>http://localhost:1313/posts/trying_ocaml/</link>
      <pubDate>Sat, 22 Mar 2025 20:31:47 +0100</pubDate>
      <guid>http://localhost:1313/posts/trying_ocaml/</guid>
      <description>&lt;p&gt;During the last couple of weeks I&amp;rsquo;ve gone on a completely different&#xA;direction. I happened to hear a few people saying good things about OCaml,&#xA;and I was kind of missing coding with strong types, so I decided to&#xA;reimplement my basic key value store (see the &lt;a href=&#34;http://localhost:1313/posts/cledis/&#34;&gt;post&lt;/a&gt;),&#xA;and see if it was fun to write.&lt;/p&gt;&#xA;&lt;p&gt;First of all, here is the&#xA;&lt;a href=&#34;https://github.com/jagg/ocledis&#34;&gt;result&lt;/a&gt;. The functionality is the&#xA;same, a hash map over a network, using an &amp;ldquo;official&amp;rdquo; async library,&#xA;and a basic client and server that receive and send S-Expressions over&#xA;the wire.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis from scratch, or Cledis</title>
      <link>http://localhost:1313/posts/cledis/</link>
      <pubDate>Sun, 02 Mar 2025 12:46:38 +0100</pubDate>
      <guid>http://localhost:1313/posts/cledis/</guid>
      <description>&lt;p&gt;This week I was looking for something new, and I realised that I&amp;rsquo;ve&#xA;never tried to do any network programming using Common Lisp. Also,&#xA;some time ago I came across the &lt;a href=&#34;https://build-your-own.org/redis/#table-of-contents&#34;&gt;Build your own&#xA;Redis&lt;/a&gt; book, but&#xA;never tried to go through it. The project is perfect, it contains&#xA;threading, networking, and even some async programming. I had no idea&#xA;what the Common Lisp ecosystem for those things looks like, so it was&#xA;time to find out.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript Async/Await vs Promises</title>
      <link>http://localhost:1313/posts/post-2/</link>
      <pubDate>Wed, 15 Feb 2023 10:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/post-2/</guid>
      <description>&lt;p&gt;While both async/await and Promises handle asynchronous operations in JavaScript, they offer different approaches to writing and reading async code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
